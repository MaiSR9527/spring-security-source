buildscript {
	configurations.all {
		resolutionStrategy.dependencySubstitution {
			substitute module('org.apache.xerces:xercesImpl') with module('xerces:xercesImpl:2.9.1')
			substitute module('org.apache.xerces:resolver') with module('xerces:resolver:2.9.1')
		}
	}
	dependencies {
		classpath 'io.spring.gradle:spring-build-conventions:0.0.23.4.RELEASE'
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
		classpath 'io.spring.nohttp:nohttp-gradle:0.0.10'
		classpath "io.freefair.gradle:aspectj-plugin:4.0.2"
	}
	repositories {
		maven{ url'http://maven.aliyun.com/nexus/content/groups/public/'}
		maven {
			url 'https://maven.aliyun.com/repository/public'
		}
		maven {
			url 'https://maven.aliyun.com/repository/google'
		}
		maven {
			url 'https://maven.aliyun.com/repository/gradle-plugin'
		}
		maven {
			url = 'https://repo.spring.io/plugins-snapshot'
			if (project.hasProperty('artifactoryUsername')) {
				credentials {
					username "$artifactoryUsername"
					password "$artifactoryPassword"
				}
			}
		}
//		maven { url 'https://plugins.gradle.org/m2/' }
	}
}
apply plugin: 'io.spring.nohttp'
apply plugin: 'io.spring.convention.root'

group = 'org.springframework.security'
description = 'Spring Security'

ext.snapshotBuild = version.contains("SNAPSHOT")
ext.releaseBuild = version.contains("SNAPSHOT")
ext.milestoneBuild = !(snapshotBuild || releaseBuild)

dependencyManagementExport.projects = subprojects.findAll { !it.name.contains('-boot') }

repositories {
	maven{ url'http://maven.aliyun.com/nexus/content/groups/public/'}
	maven {
		url 'https://maven.aliyun.com/repository/public'
	}
	maven {
		url 'https://maven.aliyun.com/repository/google'
	}
	maven {
		url 'https://maven.aliyun.com/repository/gradle-plugin'
	}
//	mavenCentral()
}

subprojects {
	plugins.withType(JavaPlugin) {
		project.sourceCompatibility='1.8'
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}
}

if (project.hasProperty('artifactoryUsername')) {
	allprojects { project ->
		project.repositories { repos ->
			all { repo ->
				if (!repo.url.toString().startsWith("https://repo.spring.io/")) {
					return;
				}
				repo.credentials {
					username = artifactoryUsername
					password = artifactoryPassword
				}
			}
		}
	}
}
